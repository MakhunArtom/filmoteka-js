{"mappings":"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","sources":["src/js/common/modal-footer.js","src/js/common/modal.js","src/js/library-page/libraryRender.js","src/js/localStorage/localStrg.js","src/js/common/renderItems.js","src/js/localStorage/addRemove.js","src/js/common/goTopBtn.js","src/js/common/spinner.js"],"sourcesContent":["const refs = {\n  overlay: document.querySelector('.modal-footer-overlay'),\n  modalFooter: document.querySelector('.modal-footer'),\n  modalBtnClose: document.querySelector('.js-modal-close')\n};\n\nexport function openModalFooter() {\n  refs.overlay.classList.add('active');\n  refs.modalFooter.classList.add('active');\n  document.body.classList.add('modal-is-open');\n  onModalOpen();\n}\n\nfunction onModalOpen() {\n  document.body.addEventListener('keydown', closeModalOnEsc);\n  refs.overlay.addEventListener('click', closeModal);\n  refs.modalBtnClose.addEventListener('click', closeModal);\n}\n\nfunction closeModalOnEsc(event) {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n}\n\nfunction closeModal() {\n  document.querySelector('.modal-footer.active').classList.remove('active');\n  document.querySelector('.modal-footer-overlay').classList.remove('active');\n  document.body.classList.remove('modal-is-open');\n}\n","import { libraryRender } from '../library-page/libraryRender';\r\nimport { addMovieToLib, removeMovieFromLib } from '../localStorage/addRemove';\r\nimport localStrg from '../localStorage/localStrg';\r\n\r\nlet closeButton = document.querySelector('.cross');\r\nconst modalBackdrop = document.querySelector('.backdrop');\r\nconst modalBox = document.querySelector('.modal-container');\r\n\r\nexport function openModal(event) {\r\n  if (!event.target.classList.contains('filmoteka__item')) {\r\n    return;\r\n  }\r\n\r\n  const movieId = +event.target.dataset.id;\r\n  renderModal(movieId);\r\n\r\n  modalBackdrop.classList.remove('visually-hidden');\r\n  document.body.style.overflow = 'scroll';\r\n\r\n  closeButton = document.querySelector('.cross');\r\n  closeButton.addEventListener('click', modalClosing);\r\n  modalBackdrop.addEventListener('click', modalClosinByBackdrop);\r\n  window.addEventListener('keydown', modalClosinByEsc);\r\n}\r\n\r\nfunction renderModal(movieID) {\r\n  const currentPageContent = localStrg.load('currentPage');\r\n  const movieToRender = currentPageContent.find(movie => movie.id === movieID);\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    originalTitle,\r\n    genres,\r\n    popularity,\r\n    overview,\r\n    rating,\r\n    voteCount,\r\n    imgPath,\r\n  } = movieToRender;\r\n\r\n  const modalMarkup = `\r\n  <div class=\"modal-img-container\">\r\n  <img\r\n    class=\"modal-img\"\r\n    src=\"${imgPath}\"\r\n    alt=\"${title}\"\r\n    width=\"370\"\r\n    height=\"470\"\r\n  />\r\n</div>\r\n<div class=\"film-info\">\r\n  <h2 class=\"film-name\">${title}</h2>\r\n  <table class=\"modal-table\">\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Vote / Votes</p></td>\r\n      <td>\r\n        <p class=\"modal-table__value\">\r\n          <span class=\"modal-table__vote\">${rating}</span> /\r\n          <span class=\"modal-table__votes\">${voteCount}</span>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Popularity</p></td>\r\n      <td><p class=\"modal-table__value\">${popularity}</p></td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Original Title</p></td>\r\n      <td><p class=\"modal-table__value\">${originalTitle}</p></td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Genre</p></td>\r\n      <td><p class=\"modal-table__value\">${genres || ''}</p></td>\r\n    </tr>\r\n  </table>\r\n\r\n  <h3 class=\"film-about\">About</h3>\r\n  <p class=\"film-description\">\r\n    ${overview}\r\n  </p>\r\n  <div class=\"modal-btn-wrap\">\r\n    <button type=\"button\" class=\"modal-btn js-watch\" data-id=\"${id}\">ADD TO WATCHED</button>\r\n    <button type=\"button\" class=\"modal-btn js-queue\" data-id=\"${id}\">ADD TO QUEUE</button>\r\n  </div>\r\n</div>`;\r\n  modalBox.insertAdjacentHTML('beforeend', modalMarkup);\r\n  checkUserLib(movieID);\r\n}\r\n\r\nfunction checkUserLib(movieID) {\r\n  const watchBtn = document.querySelector('.js-watch');\r\n  const queueBtn = document.querySelector('.js-queue');\r\n  watchBtn.addEventListener('click', onClickWatchBtn);\r\n  queueBtn.addEventListener('click', onClickQueueBtn);\r\n\r\n  let isQueued;\r\n  let isWatched;\r\n\r\n  let watchedLib = localStrg.load('watched');\r\n  let queuedLib = localStrg.load('queued');\r\n\r\n  if (watchedLib) {\r\n    isWatched = watchedLib.find(movie => movie.id == movieID) ? true : false;\r\n  }\r\n  if (queuedLib) {\r\n    isQueued = queuedLib.find(movie => movie.id == movieID) ? true : false;\r\n  }\r\n  if (isWatched) {\r\n    watchBtn.classList.add('watched');\r\n    watchBtn.innerText = 'WATCHED';\r\n  }\r\n\r\n  if (isQueued) {\r\n    queueBtn.classList.add('queued');\r\n    queueBtn.innerText = 'QUEUED';\r\n  }\r\n}\r\n\r\n// Modal LibraryButtons functions\r\nfunction onClickWatchBtn(event) {\r\n  const movieID = event.target.dataset.id;\r\n  const watchBtn = document.querySelector('.js-watch');\r\n\r\n  if (!watchBtn.classList.contains('watched')) {\r\n    addMovieToLib(movieID, 'watched');\r\n    watchBtn.classList.add('watched');\r\n    watchBtn.innerText = 'WATCHED';\r\n    updateLibraryPageContent();\r\n    return;\r\n  }\r\n\r\n  watchBtn.classList.remove('watched');\r\n  watchBtn.innerText = 'ADD TO WATCHED';\r\n  removeMovieFromLib(movieID, 'watched');\r\n\r\n  updateLibraryPageContent();\r\n}\r\n\r\nfunction onClickQueueBtn(event) {\r\n  const movieID = event.target.dataset.id;\r\n  const queueBtn = document.querySelector('.js-queue');\r\n\r\n  if (!queueBtn.classList.contains('queued')) {\r\n    addMovieToLib(movieID, 'queued');\r\n    queueBtn.classList.add('queued');\r\n    queueBtn.innerText = 'QUEUED';\r\n    updateLibraryPageContent();\r\n    return;\r\n  }\r\n\r\n  queueBtn.classList.remove('queued');\r\n  queueBtn.innerText = 'ADD TO QUEUE';\r\n  removeMovieFromLib(movieID, 'queued');\r\n\r\n  updateLibraryPageContent();\r\n}\r\n\r\nfunction updateLibraryPageContent() {\r\n  if (window.location.href.indexOf('library') > -1) {\r\n    const queuedBtn = document.querySelector('#btnQueued');\r\n    const isQueuedSelected = queuedBtn.classList.contains('active-btn');\r\n    const currentLibPage = isQueuedSelected ? 'queued' : 'watched';\r\n    libraryRender(currentLibPage);\r\n  }\r\n}\r\n\r\n// Modal closing functions\r\nfunction modalClosing() {\r\n  modalBackdrop.classList.add('visually-hidden');\r\n  document.body.style.overflow = '';\r\n  modalBackdrop.removeEventListener('click', modalClosinByBackdrop);\r\n  closeButton.removeEventListener('click', modalClosing);\r\n  window.removeEventListener('keydown', modalClosinByEsc);\r\n  modalBox.innerHTML = '<button type=\"button\" class=\"cross\">+</button>';\r\n}\r\n\r\nfunction modalClosinByEsc(event) {\r\n  if (event.code === 'Escape') {\r\n    modalClosing();\r\n  }\r\n}\r\n\r\nfunction modalClosinByBackdrop(event) {\r\n  if (event.target.classList.contains('backdrop')) {\r\n    modalClosing();\r\n  }\r\n}\r\n","import localStrg from '../localStorage/localStrg';\nimport { renderItems } from '../common/renderItems';\n\nexport function libraryRender(userLibrary) {\n    const mainContainer = document.querySelector('.filmoteka__container');\n    let currentLib = localStrg.load(userLibrary);\n      if (!currentLib) {\n        mainContainer.innerHTML =\n          '<div><p2 class=\"empty_text\">It seems that there is no films here!</p2></div>'\n        ;\n        return;\n      }\n      renderItems(currentLib);\n    }","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.log(`Error during saving ${key} to local strage; `, error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.log(`Error during getting ${key} from localStorage: `, error.message);\n  }\n};\n\nconst del = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log(`Error during deleting ${key}! from localStorage: `, error.message);\n  }\n};\n\n\nexport default {\n  save,\n  load,\n  del\n};\n","export function renderItems(currentPageContent) {\n  const mainContainer = document.querySelector('.filmoteka__container')\n  const itemMarkup = currentPageContent.map(\n    ({ id, title, year, genres, rating, imgPath }) => {\n      if (genres) {\n        let countOfComma = (genres.match(/\\,/g) || []).length;\n        while (countOfComma > 1) {\n          genres = genres.slice(0, genres.lastIndexOf(',')) + 'npm ...';\n          countOfComma = (genres.match(/\\,/g) || []).length;\n        }\n      }\n      let itemString = `\n         <div class=\"filmoteka__item\" data-id=\"${id}\">\n              <div class=\"filmoteka__item-wrapper\">\n                  <img class=\"filmoteka-img\" src=\"${imgPath}\" alt=\"\">\n                  <div class=\"overlay-text\">\n                      <h2 class=\"subtitle\">${title}</h2>\n                      <p class=\"discription\">`;\n      if (genres) {\n        itemString += `${genres} `;\n        if (year) {\n          itemString += `|`;\n        }\n      }\n      if (year) {\n        itemString += `<span class=\"filmoteka__year\"> ${year}</span>`;\n      }\n      itemString += ` </p>\n                      <div class=\"filmoteka__rating\">${rating}</div>\n                  </div>\n              </div>\n      </div>`;\n      return itemString;\n    }\n  );\n  mainContainer.innerHTML = '';\n  mainContainer.insertAdjacentHTML('beforeend', itemMarkup.join(''));\n}\n","import localStrg from './localStrg';\n\nexport function removeMovieFromLib(movieID, userLibrary) {\n  let currentLibraryState = localStrg.load(userLibrary);\n  let updatedLibraryState = currentLibraryState.filter(movie => {\n    return movie.id !== +movieID;\n  });\n\n  updatedLibraryState =\n    updatedLibraryState.length > 0 ? updatedLibraryState : null;\n  localStrg.save(userLibrary, updatedLibraryState);\n}\n\nexport function addMovieToLib(movieID, userLibrary) {\n  let currentLibraryState = localStrg.load(userLibrary);\n  const currentPage = localStrg.load('currentPage');\n  let movieToAddToLib = currentPage.find(movie => movie.id == movieID);\n\n  if (!currentLibraryState) {\n    currentLibraryState = [movieToAddToLib];\n  } else currentLibraryState.push(movieToAddToLib);\n\n  localStrg.save(userLibrary, currentLibraryState);\n}\n","export default function goTopBtn () {\n\n  function trackScroll() {\n    var scrolled = window.pageYOffset;\n    var coords = document.documentElement.clientHeight;\n\n    if (scrolled > coords) {\n      goTopBtn.classList.add('back_to_top-show');\n    }\n    if (scrolled < coords) {\n      goTopBtn.classList.remove('back_to_top-show');\n    }\n  }\n\n  function backToTop() {\n      if (window.pageYOffset > 0) {\n        window.scroll({\n      top: 0,\n      behavior: 'smooth',\n    });\n      }\n  }\n\n  var goTopBtn = document.querySelector('.back_to_top');\n\n  window.addEventListener('scroll', trackScroll);\n  goTopBtn.addEventListener('click', backToTop);\n};","export default class Spinner {\n\n    spinOn() {\n        const preLoader = document.getElementById('spinner');\n        if (preLoader.classList.contains('done')) {\n            preLoader.classList.remove('done')\n        }\n    };\n\n    spinOff() {\n        setTimeout(function () {\n            const preloader = document.getElementById('spinner');\n            if (!preloader.classList.contains('done')) {\n                preloader.classList.add('done')\n            }\n        \n        }, 500);\n\n    };\n}"],"names":["$23bb531707b5ed11$var$refs","overlay","document","querySelector","modalFooter","modalBtnClose","$23bb531707b5ed11$export$80cb5291f8f25313","classList","add","body","addEventListener","$23bb531707b5ed11$var$closeModalOnEsc","$23bb531707b5ed11$var$closeModal","event","code","remove","$gnLbn","parcelRequire","$ad853de26021a040$var$closeButton","$ad853de26021a040$var$modalBackdrop","$ad853de26021a040$var$modalBox","$ad853de26021a040$export$a7f6cffb6b8ba11c","target","contains","movieID","movieToRender","$7GRT7","default","load","find","movie","id","title","originalTitle","genres","popularity","overview","rating","voteCount","imgPath","modalMarkup","insertAdjacentHTML","watchBtn","queueBtn","isQueued","isWatched","$ad853de26021a040$var$onClickWatchBtn","$ad853de26021a040$var$onClickQueueBtn","watchedLib","queuedLib","innerText","$ad853de26021a040$var$renderModal","dataset","style","overflow","$ad853de26021a040$var$modalClosing","$ad853de26021a040$var$modalClosinByBackdrop","window","$ad853de26021a040$var$modalClosinByEsc","$cBqmo","addMovieToLib","$ad853de26021a040$var$updateLibraryPageContent","$bed364c5f49b67f0$export$af55b9989f8479c","userLibrary","mainContainer","currentLib","$ccJnQ","renderItems","innerHTML","$599641b11c839d6b$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","log","message","getItem","undefined","parse","removeItem","$8e29cf4802d0d4b8$export$c1f1fc7a5593d7f1","currentPageContent","itemMarkup","map","year","countOfComma","match","length","slice","lastIndexOf","itemString","join","$025e26c35a91691c$export$a6c9911638b2c14d","updatedLibraryState","filter","save","$025e26c35a91691c$export$19a6eda62dc56b25","currentLibraryState","movieToAddToLib","push","$e85a8c9acb74d2ad$export$2e2bcd8739ae039","goTopBtn1","scrolled","pageYOffset","coords","documentElement","clientHeight","scroll","top","behavior","$447de57f986a9136$export$2e2bcd8739ae039","spinOn","preLoader","getElementById","spinOff","setTimeout","preloader"],"version":3,"file":"library.bccbc2b6.js.map"}