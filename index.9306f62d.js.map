{"mappings":"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","sources":["src/js/index-page/getPopularMovies.js","src/js/pagination-js/pagination-markup.js","src/js/pagination-js/counter-pagination.js","src/js/pagination-js/main-pagination.js","src/js/index-page/themoviedbAPI.js","src/js/data-processing/decodeGenres.js","src/js/data-processing/processCurrentPage.js","src/js/index-page/search.js","src/js/index-page/index.js"],"sourcesContent":["import { fetchPopular } from './themoviedbAPI';\nimport { decodeGenres } from '../data-processing/decodeGenres';\n\nimport { APIKEY } from './index';\n\nexport let pageCount;\n\nexport async function getPopularMovies(APIKEY) {\n  const popularMovies = await fetchPopular(APIKEY);\n  pageCount = popularMovies.total_pages;\n  return popularMovies.results;\n}\n","import { pageCount } from '../index-page/getPopularMovies';\n\nexport function pagMarkup(peg2, peg3, peg4, peg5, peg6) {\n  return `<div class='pagination-decrement'>\n  <button class='btn-left btn' type='button'>\n   \n  </button>\n</div>\n<a class='pagination__page ' href=''>1</a>\n<span class='pagination__ellipsisStart visually-hidden' id=\"ellipsisStart\">...</span>\n<a class='pagination__page' id=\"firstPage\" href=''>${peg2}</a>\n<a class='pagination__page' href=''>${peg3}</a>\n<a class='pagination__page' href=''>${peg4}</a>\n<a class='pagination__page' href=''>${peg5}</a>\n<a class='pagination__page' id=\"lastPag\" href=''>${peg6}</a>\n<span class='pagination__ellipsisEnd' id=\"ellipsisEnd\">...</span>\n<a class='pagination__lastPage' href=''>${pageCount}</a>\n<div class='pagination-increment'>\n  <button class='btn-right btn' type='button'>\n    \n  </button>\n</div>`;\n}\n","import { pageCount } from '../index-page/getPopularMovies';\nimport { PAGE } from './main-pagination';\nimport { pagMarkup } from './pagination-markup';\n\n////////////////////////////// СЧЕТЧИК ПАГИНАЦИИ ////////////////////////////////////////////////////////////////////////////////////////\nconst div = document.querySelector('#pagination');\n//////////////////////////// ОТРИСОВКА ПАГИНАЦИИ  ПО СЫЛКЕ\nexport function renderMarkupOnClickLink() {\n  const firstPage = document.querySelector('#firstPage');\n  const lastPage = document.querySelector('#lastPag');\n\n  const pages = {\n    peg2: PAGE,\n    peg3: PAGE,\n    peg4: PAGE,\n    peg5: PAGE,\n    peg6: PAGE,\n  };\n\n  // Последняя страница\n  if (PAGE === pageCount || PAGE >= pageCount - 4) {\n    lastPages(pages);\n    return;\n  }\n\n  // Увиличение счетчика\n  if (Number(lastPage.textContent) === PAGE) {\n    // Останавливаю счетчик на пред последней странице\n    if (Number(lastPage.textContent) === pageCount - 1) {\n      return;\n    }\n    incriment(pages);\n  }\n\n  // Уменьшение счетчика\n  if (Number(firstPage.textContent) === PAGE) {\n    // Останавливаю счетчик на пред первой странице\n    if (Number(firstPage.textContent) === 2) {\n      return;\n    }\n    dicremrnt(pages);\n  }\n\n  // Отрисовка начальных страниц от 1-6\n  if (PAGE === 1 || PAGE <= 5) {\n    startPage();\n  }\n\n  // Последняя страница\n  if (PAGE === pageCount || PAGE > pageCount - 2) {\n    lastPages();\n  }\n}\n\n//////////////////// ОТРИСОВКА ПАГИНАЦИИ  ПО КНОПКЕ\n\nexport function renderPaginationONClickBtn(e) {\n  const firstPage = document.querySelector('#firstPage');\n  const lastPage = document.querySelector('#lastPag');\n\n  const pages = {\n    peg2: PAGE,\n    peg3: PAGE,\n    peg4: PAGE,\n    peg5: PAGE,\n    peg6: PAGE,\n  };\n\n  // // Последняя страница\n  if (PAGE === pageCount || PAGE >= pageCount - 5) {\n    lastPages(pages);\n    return;\n  }\n\n  // увиличеник счетчика\n  if (PAGE > Number(lastPage.textContent)) {\n    if (Number(lastPage.textContent) === pageCount - 1) {\n      return;\n    }\n    incriment(pages);\n  }\n\n  // Отрисовка начальных страниц от 1-6\n  if (PAGE === 5) {\n    startPage();\n    return;\n  }\n\n  // // Уменьшение счетчика\n  if (PAGE < Number(firstPage.textContent)) {\n    if (PAGE === 1) {\n      return;\n    }\n    dicremrnt(pages);\n  }\n}\n\n//////////////////////////////// ОТРИСОВКА ПОСЛЕДНЕЙ СТРАНИЦИ\nfunction lastPages(pages) {\n  if (PAGE > pageCount) {\n    return;\n  }\n  let { peg2, peg3, peg4, peg5, peg6 } = pages;\n\n  div.innerHTML = '';\n\n  peg6 = pageCount - 1;\n  peg5 = pageCount - 2;\n  peg4 = pageCount - 3;\n  peg3 = pageCount - 4;\n  peg2 = pageCount - 5;\n\n  div.innerHTML = pagMarkup(peg2, peg3, peg4, peg5, peg6);\n}\n\n//////////////////////////////////// УМЕНЬШЕНИЕ СЧЕТЧИКА\nfunction dicremrnt(pages) {\n  div.innerHTML = '';\n\n  let { peg2, peg3, peg4, peg5, peg6 } = pages;\n\n  peg5 -= 1;\n  peg4 -= 2;\n  peg3 -= 3;\n  peg2 -= 4;\n\n  div.innerHTML = pagMarkup(peg2, peg3, peg4, peg5, peg6);\n}\n\n////////////////////////////////// // УВИЛИЧЕНИЕ СЧЕТЧИКА\n\nfunction incriment(pages) {\n  if (PAGE > pageCount) {\n    return;\n  }\n  div.innerHTML = '';\n\n  let { peg2, peg3, peg4, peg5, peg6 } = pages;\n\n  peg3 += 1;\n  peg4 += 2;\n  peg5 += 3;\n  peg6 += 4;\n\n  div.innerHTML = pagMarkup(peg2, peg3, peg4, peg5, peg6);\n}\n\n// //////////////////// РАЗМЕТКА ПАГИНАЦИИ ПРИ ПЕРВОМ ЗАПУСКЕ СТРАНИЦЫ (НАЧАЛЬНАЯ СТРАНИЦА)\n\nexport function startPage(e) {\n  div.innerHTML = '';\n\n  div.innerHTML = `<div class='pagination-decrement'>\n  <button class='btn-left btn' type='button'>\n \n  </button>\n</div>\n<a class='pagination__page ' href=''>1</a>\n<span class='pagination__ellipsisStart visually-hidden' id=\"ellipsisStart\">...</span>\n<a class='pagination__page' id=\"firstPage\" href=''>2</a>\n<a class='pagination__page' href=''>3</a>\n<a class='pagination__page' href=''>4</a>\n<a class='pagination__page' href=''>5</a>\n<a class='pagination__page' id=\"lastPag\" href=''>6</a>\n<span class='pagination__ellipsisEnd' id=\"ellipsisEnd\">...</span>\n<a class='pagination__lastPage' href=''>${pageCount}</a>\n<div class='pagination-increment'>\n  <button class='btn-right btn' type='button'>\n    \n  </button>\n \n</div>`;\n}\n\n//////////////////////////// УБИРАЮ ИЛИ СТАВЛЮ  \"...\"\n\nexport function ellipsis() {\n  const firstPage = document.querySelector('#firstPage');\n  const lastPage = document.querySelector('#lastPag');\n  const ellipsisStart = document.querySelector('#ellipsisStart');\n  const ellipsisEnd = document.querySelector('#ellipsisEnd');\n\n  if (firstPage.textContent > 2) {\n    ellipsisStart.classList.remove('visually-hidden');\n  }\n\n  if (lastPage.textContent >= pageCount - 1) {\n    ellipsisEnd.classList.add('visually-hidden');\n    return;\n  }\n  ellipsisEnd.classList.remove('visually-hidden');\n}\n","import { renderMarkupOnClickLink } from './counter-pagination';\nimport { renderPaginationONClickBtn } from './counter-pagination';\nimport { renderPopularMovies } from '../index-page/index';\n\nimport { ellipsis } from './counter-pagination';\n\nexport let PAGE = 1;\nconst div = document.querySelector('#pagination');\nconst refs = {\n  mainContainer: document.querySelector('.filmoteka__container'),\n};\ndiv.addEventListener('click', onClickPaginationLink);\ndiv.addEventListener('click', onClickButtonPagination);\n\n// startPage();\n// ////////////////////// НАВИГАЦИЯ ПО СЫЛКЕ\n\nfunction onClickPaginationLink(e) {\n  e.preventDefault();\n\n  if (e.target.nodeName !== 'A') {\n    return;\n  }\n\n  PAGE = Number(e.target.textContent);\n\n  // fetchOnPagination(PAGE).then(respons => console.log(respons));\n  refs.mainContainer.innerHTML = '';\n  renderPopularMovies();\n\n  // СЧЕТЧИК ПАГИНАЦИИ\n  renderMarkupOnClickLink();\n  ellipsis();\n}\n\n// ////////////////////// НАВИГАЦИЯ ПО КНОПКЕ\n\nfunction onClickButtonPagination(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const leftBtn = document.querySelector('.btn-left');\n  const rightBtn = document.querySelector('.btn-right');\n\n  if (e.target === rightBtn) {\n    PAGE += 1;\n  }\n\n  if (e.target === leftBtn) {\n    PAGE -= 1;\n  }\n\n  // fetchOnPagination(PAGE).then(respons => console.log(respons));\n\n  refs.mainContainer.innerHTML = '';\n  renderPopularMovies();\n  // СЧЕТЧИК ПАГИНАЦИИ\n  renderPaginationONClickBtn(e);\n  ellipsis();\n}\n","import { APIURL } from './index';\nimport localStrg from '../localStorage/localStrg';\nimport { PAGE } from '../pagination-js/main-pagination';\n\nexport async function fetchPopular(token) {\n  return await (\n    await fetch(APIURL + `3/trending/movie/day?api_key=${token}&page=${PAGE}`)\n  ).json();\n}\n\nexport async function fetchGenresList(token){\n    const response = await (await fetch(APIURL+`3/genre/movie/list?api_key=${token}&language=en-US`)).json();\n    localStrg.save(\"genresList\",response.genres);\n    console.log(\"Genres were updated, and saved to localStorage for future\");\n    return response.genres;\n}\n\nexport async function fetchSearch(token,name) {   \n    const response = await (await fetch(APIURL+`3/search/movie?api_key=${token}&language=en-US&query=${name}`)).json()\n    return response\n}\n","import { fetchGenresList } from \"../index-page/themoviedbAPI\";\nimport localStrg, { save, load, del } from \"../localStorage/localStrg\";\nimport { APIKEY } from \"../index-page/index\";\n\nexport async function decodeGenres(genres){\n    if (!localStrg.load (\"genresList\")){\n        await fetchGenresList(APIKEY)\n    }\n    let genresList = localStrg.load (\"genresList\");\n    let genresNames = new Array;\n    \n    genres.forEach(async genre =>  {\n    // try to find genre in localStorage\n    try{\n        genresNames.push((genresList.find(genreListItem => genreListItem.id === genre)).name)\n    }// update localStorage ganres data and try to find one more time\n    catch(error){\n        console.log(`${genre} wasn't found in Local Storage, updating ganresList`)\n        genresList = await fetchGenresList(APIKEY);\n        genresNames.push((genresList.find(genreListItem => genreListItem.id === genre)).name)\n    }\n});\n\n    return(genresNames.join(\", \"))\n}\n","import { decodeGenres } from './decodeGenres';\nimport localStrg from '../localStorage/localStrg';\n\nexport async function processCurrentPage (result){\n    const currentPageContent = await Promise.all(\n      result.map(\n        async ({\n          id,\n          title,\n          original_title,\n          name,\n          original_name,\n          overview,\n          poster_path,\n          genre_ids,\n          popularity,\n          release_date,\n          first_air_date,\n          vote_average,\n          vote_count,\n        }) => {\n          const movieTitle = title ? title : name;\n          const movieOriginalTitle = original_title\n            ? original_title\n            : original_name;\n          const movieDate = release_date ? release_date : first_air_date;\n          const imgPath = poster_path\n            ? `https://image.tmdb.org/t/p/w300` + poster_path\n            : '';\n          const genres = genre_ids.length > 1 ? await decodeGenres(genre_ids) : false;\n          const raitng = vote_average ? vote_average.toFixed(1) : 0;\n\n          return await {\n            id: id,\n            title: movieTitle,\n            originalTitle: movieOriginalTitle,\n            year: movieDate ? movieDate.slice(0, 4) : undefined,\n            genres: genres,\n            popularity: popularity,\n            overview: overview,\n            rating: raitng,\n            voteCount: vote_count,\n            imgPath: imgPath,\n          };\n        }\n      )\n    );\n    localStrg.save('currentPage', currentPageContent);\n  \n    return currentPageContent;\n  }","import { fetchSearch } from './themoviedbAPI';\nimport { processCurrentPage } from '../data-processing/processCurrentPage';\nimport { APIKEY } from '.';\nimport { refs } from '.';\nimport { startPage } from '../pagination-js/counter-pagination';\nimport { renderItems } from '../common/renderItems';\nimport { renderPopularMovies } from '.';\nimport localStrg from '../localStorage/localStrg';\nimport Spinner from '../common/spinner';\n\nconst spin = new Spinner();\n\nexport let pageCount;\n\nlet searchQuery = '';\n\nexport async function searchMovies(event) {\n  event.preventDefault();\n  spin.spinOn();\n  searchQuery = event.target.search.value;\n  refs.searchResultText.classList.add('visually-hidden');\n\n  if(!searchQuery){\n    renderPopularMovies();\n    spin.spinOff();\n    return\n  }\n\n  const searchResult = await getSearchMovies();\n  const currentPageContent= await processCurrentPage (searchResult);\n\n  if (currentPageContent.length > 0) {\n    renderItems(currentPageContent);\n    startPage();\n    spin.spinOff();\n    return;\n  }\n  refs.searchResultText.classList.remove('visually-hidden');\n}\n\nexport async function getSearchMovies() {\n  const popularMovies = await fetchSearch(APIKEY, searchQuery);\n  pageCount = popularMovies.total_pages;\n\n  return popularMovies.results\n}","import { processCurrentPage } from '../data-processing/processCurrentPage';\nimport { openModalFooter } from '../common/modal-footer';\nimport { getPopularMovies } from '../index-page/getPopularMovies';\nimport { openModal } from '../common/modal';\nimport { startPage } from '../pagination-js/counter-pagination';\nimport { renderItems } from '../common/renderItems';\nimport { searchMovies } from './search';\nimport goTopBtn from '../common/goTopBtn';\nimport Spinner from '../common/spinner';\n\nconst spin = new Spinner();\n\n\nexport const APIKEY = '565e4989d784811de7dff7d665000157';\nexport const APIURL = 'https://api.themoviedb.org/';\nexport const refs = {\n  mainContainer: document.querySelector('.filmoteka__container'),\n  openModalBtn: document.querySelector('.modal-footer-open'),\n  searchResultText: document.querySelector('.form-text'),\n  form: document.querySelector('.header_search'),\n};\n\nrefs.mainContainer.addEventListener('click', openModal);\nrefs.openModalBtn.addEventListener('click', openModalFooter);\nrefs.form.addEventListener('submit', searchMovies);\n\nspin.spinOn();\nrenderPopularMovies();\n\nexport async function renderPopularMovies() {\n  const popularMovies = await getPopularMovies(APIKEY);\n  const currentPageContent= await processCurrentPage (popularMovies);\n\n  renderItems(currentPageContent);\n  startPage();\n  spin.spinOff();\n}\ngoTopBtn();\n"],"names":["$17f20fb34796b7a5$export$7804ac8eb5cfa918","async","$17f20fb34796b7a5$export$76bd8a7b840a3729","APIKEY1","popularMovies","$c4db51420262bac1$export$16bf2264c00353d2","total_pages","results","$e9e1ba73732ed350$export$c90e0de26581eb18","peg2","peg3","peg4","peg5","peg6","$57e6bfcf14d26f27$var$div","document","querySelector","$57e6bfcf14d26f27$export$d2dfced4bd191a20","firstPage","lastPage","pages","$6f8eac57d8ad4780$export$d3d35020fa5b54f0","$57e6bfcf14d26f27$var$lastPages","Number","textContent","$57e6bfcf14d26f27$var$incriment","$57e6bfcf14d26f27$var$dicremrnt","$57e6bfcf14d26f27$export$bfa07905d8d7dc88","$57e6bfcf14d26f27$export$7526032aa4edafb4","e","innerHTML","$57e6bfcf14d26f27$export$a5b94313d6908893","ellipsisStart","ellipsisEnd","classList","remove","add","$6f8eac57d8ad4780$var$div","$6f8eac57d8ad4780$var$refs","mainContainer","token","fetch","$c1872c521253a89f$export$39576a9723c055a0","json","$c4db51420262bac1$export$d60bdeaf43923027","response","$7GRT7","default","save","genres","console","log","$c4db51420262bac1$export$6f539dc45dead1c","name","addEventListener","preventDefault","target","nodeName","$c1872c521253a89f$export$12335c527465096d","leftBtn","rightBtn","$80aed46539d0ffa4$export$10c61d4a9a9ff219","load","$c1872c521253a89f$export$8aa241ee05ce92b7","genresList","genresNames","Array","forEach","genre","push","find","genreListItem","id","error","join","$588bc9c78565615f$export$8ea1b01e13f14e83","result","currentPageContent","Promise","all","map","title","original_title","original_name","overview","poster_path","genre_ids","popularity","release_date","first_air_date","vote_average","vote_count","movieTitle","movieOriginalTitle","movieDate","imgPath","length","raitng","toFixed","originalTitle","year","slice","undefined","rating","voteCount","$4979be684e158b87$var$spin","$4979be684e158b87$export$7804ac8eb5cfa918","$4979be684e158b87$var$searchQuery","$c1872c521253a89f$var$spin","$c1872c521253a89f$export$21666b427502ea6d","openModalBtn","searchResultText","form","$ccJnQ","renderItems","spinOff","$eTE0Z","openModal","$34clH","openModalFooter","event","spinOn","search","value","searchResult","$4979be684e158b87$export$7bb36ad8ac4c04bb","$jWOqs"],"version":3,"file":"index.9306f62d.js.map"}