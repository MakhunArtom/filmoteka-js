{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCCCAC,EAAAD,EAAA,SDEO,IAAME,EAAS,mCAEhBC,EAAO,CACTC,cAAeC,SAASC,cAAc,0B,SAQ3BC,I,OAAAA,EAAfC,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,I,mFACsB,EAAAC,EAAAC,kBAAiBX,G,OAAnCY,UAASC,EAAAC,KACTf,EAAAgB,QAAUC,KAAK,UAAUJ,WACzBb,EAAAgB,QAAUC,KAAK,SAAUJ,W,4CAHIK,MAAAC,KAAAC,U,aAAlBd,EAAkBY,MAAAC,KAAAC,U,CADjCC,GCNA,SAAuBC,EAAaC,GAQlC,IAAMC,EAAiCxB,EAAAgB,QAAUS,KAAKF,GAMtD,GAAKC,EAYA,CAEH,IAAIE,EAAkBF,EAA+BG,KACnD,SAAAC,GAEE,IACEC,EAMED,EANFC,GACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,KACAC,EAGEJ,EAHFI,OACAC,EAEEL,EAFFK,OACAC,EACEN,EADFM,QAGEC,EAAa,yCAGyBC,OAHgBP,EAAG,+JAK1BO,OAFOF,EAAQ,6GAETE,OAANN,EAAM,sDAazC,YAXiBO,IAAXL,IACJG,GAAc,oCAA2CC,OAAPJ,EAAO,iBAE5CK,IAATN,IACJI,GAAc,mCAAwCC,OAALL,EAAK,YAExDI,GAAc,wBAA+BC,OAAPH,EAAO,wF,IAO9CK,KAAK,IAMRhB,EAAYiB,mBAAmB,YAAab,E,MAhD5CJ,EAAYiB,mBACV,YACA,+E,CDLN,CAAcrC,EAAKC,cAAc,U","sources":["src/js/library.js","src/js/libraryRender.js"],"sourcesContent":["import { getPopularMovies } from \"./getPopularMovies\";\nimport localStrg from \"./localStrg\";\nimport { libraryRender } from \"./libraryRender\";\nexport const APIKEY = \"565e4989d784811de7dff7d665000157\";\nexport const APIURL=\"https://api.themoviedb.org/\";\nconst refs = {\n    mainContainer: document.querySelector(\".filmoteka__container\")\n}\n\n/* for testing purpouses getting film collection and save it as\nit is library variable */\n\n\ndummyLibraryMovies();\nasync function dummyLibraryMovies(){\n    testQuery = await getPopularMovies(APIKEY);\n    localStrg.save(\"watched\",testQuery);\n    localStrg.save(\"queued\", testQuery);\n}\n//console.log(\"I'm before library render\")\n\n/*reating gallery with films from \"watched\" library*/\nlibraryRender(refs.mainContainer,\"watched\");","//importing library for working with local storage\nimport localStrg from './localStrg';\n\n/*function definition for gallery rendering\nwith two parameters: 1) document element where gallery has to be created\n2) library (local storage variable) from which this gallery should be created*/\n\nfunction libraryRender(htmlElement, userLibrary) {\n\n  \n  //console.log(htmlElement);\n  \n  \n  /* getting films collection from localStorage */\n\n  const filmCollectionFromLocalStorage = localStrg.load(userLibrary);\n  \n  //console.log(\"read from localstorage\"+filmCollectionFromLocalStorage);\n  \n  /* Checking if there is collection variable in local storage */\n\n  if (!filmCollectionFromLocalStorage) {\n\n    /*if not: adding title with text \"It seems that there is no films here!\"*/\n\n    htmlElement.insertAdjacentHTML(\n      'beforeend',\n      '<div><p2 class=\"empty_text\">It seems that there is no films here!</p2></div>'\n    );\n  }\n\n  /* if collection exists, creating gallery */\n\n  else {\n    //console.log(\"local storage variable was read successfully!\");\n    let ObjectForInsert = filmCollectionFromLocalStorage.map(\n      film => {\n        //console.log(\"film: \" + film);\n        const {\n          id,\n          title,\n          year,\n          genres,\n          rating,\n          imgPath,\n        } = film;\n\n        let itemString = `<div class=\"filmoteka__item\" data-id=\"${id}\">\n        <a class=\"filmoteka__item-link\" href=\"./\">\n            <div class=\"filmoteka__item-wrapper\">\n                <img class=\"filmoteka-img\" src=\"${imgPath}\" alt=\"\" width=\"\">\n                <div class=\"overlay-text\">\n                    <h2 class=\"subtitle\">${title}</h2>\n                    <p class=\"discription\">`;\n        if (!(genres === undefined)) {\n          itemString += `<span class=\"description__genre\">${genres}</span>`;\n        }\n        if (!(year === undefined)) {\n          itemString += `<span class=\"description__year\">${year}</span>`;\n        }\n        itemString += `<span class=\"rating\">${rating}</span></p>\n                </div>\n            </div>\n        </a>\n        </div>`;\n        return itemString;\n      })\n      .join('');\n      \n      //console.log( \"this is object for insert: \"+ObjectForInsert+ \"In here\");\n      //console.log(\"I've done with string gathering\");\n      \n\n    htmlElement.insertAdjacentHTML('beforeend', ObjectForInsert);\n  }\n}\nexport { libraryRender };\n"],"names":["$bpxeT","parcelRequire","$kl6rN","$93effc6fc56091ad$export$8aa241ee05ce92b7","$93effc6fc56091ad$var$refs","mainContainer","document","querySelector","$93effc6fc56091ad$var$_dummyLibraryMovies","$parcel$interopDefault","$2TvXO","mark","_callee","$dx5Tn","getPopularMovies","testQuery","_ctx","sent","default","save","apply","this","arguments","$93effc6fc56091ad$var$dummyLibraryMovies","htmlElement","userLibrary","filmCollectionFromLocalStorage","load","ObjectForInsert","map","film","id","title","year","genres","rating","imgPath","itemString","concat","undefined","join","insertAdjacentHTML"],"version":3,"file":"library.169cfd33.js.map"}