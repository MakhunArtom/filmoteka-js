{"mappings":"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","sources":["src/js/common/modal-footer.js","src/js/localStorage/localStrg.js","src/js/common/renderItems.js","src/js/library-page/libraryRender.js","src/js/localStorage/addRemove.js","src/js/common/modal.js","src/js/library-page/library.js"],"sourcesContent":["const refs = {\n  overlay: document.querySelector('.modal-footer-overlay'),\n  modalFooter: document.querySelector('.modal-footer'),\n  modalBtnClose: document.querySelector('.js-modal-close')\n};\n\nexport function openModalFooter() {\n  refs.overlay.classList.add('active');\n  refs.modalFooter.classList.add('active');\n  document.body.classList.add('modal-is-open');\n  onModalOpen();\n}\n\nfunction onModalOpen() {\n  document.body.addEventListener('keydown', closeModalOnEsc);\n  refs.overlay.addEventListener('click', closeModal);\n  refs.modalBtnClose.addEventListener('click', closeModal);\n}\n\nfunction closeModalOnEsc(event) {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n}\n\nfunction closeModal() {\n  document.querySelector('.modal-footer.active').classList.remove('active');\n  document.querySelector('.modal-footer-overlay').classList.remove('active');\n  document.body.classList.remove('modal-is-open');\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.log(`Error during saving ${key} to local strage; `, error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.log(`Error during getting ${key} from localStorage: `, error.message);\n  }\n};\n\nconst del = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log(`Error during deleting ${key}! from localStorage: `, error.message);\n  }\n};\n\n\nexport default {\n  save,\n  load,\n  del\n};\n","export function renderItems(currentPageContent) {\n  const mainContainer = document.querySelector('.filmoteka__container')\n  const itemMarkup = currentPageContent.map(\n    ({ id, title, year, genres, rating, imgPath }) => {\n      if (genres) {\n        let countOfComma = (genres.match(/\\,/g) || []).length;\n        while (countOfComma > 1) {\n          genres = genres.slice(0, genres.lastIndexOf(',')) + 'npm ...';\n          countOfComma = (genres.match(/\\,/g) || []).length;\n        }\n      }\n      let itemString = `\n         <div class=\"filmoteka__item\" data-id=\"${id}\">\n              <div class=\"filmoteka__item-wrapper\">\n                  <img class=\"filmoteka-img\" src=\"${imgPath}\" alt=\"\">\n                  <div class=\"overlay-text\">\n                      <h2 class=\"subtitle\">${title}</h2>\n                      <p class=\"discription\">`;\n      if (genres) {\n        itemString += `${genres} `;\n        if (year) {\n          itemString += `|`;\n        }\n      }\n      if (year) {\n        itemString += `<span class=\"filmoteka__year\"> ${year}</span>`;\n      }\n      itemString += ` </p>\n                      <div class=\"filmoteka__rating\">${rating}</div>\n                  </div>\n              </div>\n      </div>`;\n      return itemString;\n    }\n  );\n  mainContainer.innerHTML = '';\n  mainContainer.insertAdjacentHTML('beforeend', itemMarkup.join(''));\n}\n","import localStrg from '../localStorage/localStrg';\nimport { renderItems } from '../common/renderItems';\n\nexport function libraryRender(userLibrary) {\n    const mainContainer = document.querySelector('.filmoteka__container');\n    let currentLib = localStrg.load(userLibrary);\n      if (!currentLib) {\n        mainContainer.innerHTML =\n          '<div><p2 class=\"empty_text\">It seems that there is no films here!</p2></div>'\n        ;\n        return;\n      }\n      renderItems(currentLib);\n    }","import localStrg from './localStrg';\n\nexport function removeMovieFromLib(movieID, userLibrary) {\n  let currentLibraryState = localStrg.load(userLibrary);\n  let updatedLibraryState = currentLibraryState.filter(movie => {\n    return movie.id !== +movieID;\n  });\n\n  updatedLibraryState =\n    updatedLibraryState.length > 0 ? updatedLibraryState : null;\n  localStrg.save(userLibrary, updatedLibraryState);\n}\n\nexport function addMovieToLib(movieID, userLibrary) {\n  let currentLibraryState = localStrg.load(userLibrary);\n  const currentPage = localStrg.load('currentPage');\n  let movieToAddToLib = currentPage.find(movie => movie.id == movieID);\n\n  if (!currentLibraryState) {\n    currentLibraryState = [movieToAddToLib];\n  } else currentLibraryState.push(movieToAddToLib);\n\n  localStrg.save(userLibrary, currentLibraryState);\n}\n","import { libraryRender } from '../library-page/libraryRender';\r\nimport { addMovieToLib, removeMovieFromLib } from '../localStorage/addRemove';\r\nimport localStrg from '../localStorage/localStrg';\r\n\r\nlet closeButton = document.querySelector('.cross');\r\nconst modalBackdrop = document.querySelector('.backdrop');\r\nconst modalBox = document.querySelector('.modal-container');\r\n\r\nexport function openModal(event) {\r\n  if (!event.target.classList.contains('filmoteka__item')) {\r\n    return;\r\n  }\r\n\r\n  const movieId = +event.target.dataset.id;\r\n  renderModal(movieId);\r\n\r\n  modalBackdrop.classList.remove('visually-hidden');\r\n  document.body.style.overflow = 'hidden';\r\n\r\n  closeButton = document.querySelector('.cross');\r\n  closeButton.addEventListener('click', modalClosing);\r\n  modalBackdrop.addEventListener('click', modalClosinByBackdrop);\r\n  window.addEventListener('keydown', modalClosinByEsc);\r\n}\r\n\r\nfunction renderModal(movieID) {\r\n  const currentPageContent = localStrg.load('currentPage');\r\n  const movieToRender = currentPageContent.find(movie => movie.id === movieID);\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    originalTitle,\r\n    genres,\r\n    popularity,\r\n    overview,\r\n    rating,\r\n    voteCount,\r\n    imgPath,\r\n  } = movieToRender;\r\n\r\n  const modalMarkup = `\r\n  <div class=\"modal-img-container\">\r\n  <img\r\n    class=\"modal-img\"\r\n    src=\"${imgPath}\"\r\n    alt=\"${title}\"\r\n    width=\"370\"\r\n    height=\"470\"\r\n  />\r\n</div>\r\n<div class=\"film-info\">\r\n  <h2 class=\"film-name\">${title}</h2>\r\n  <table class=\"modal-table\">\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Vote / Votes</p></td>\r\n      <td>\r\n        <p class=\"modal-table__value\">\r\n          <span class=\"modal-table__vote\">${rating}</span> /\r\n          <span class=\"modal-table__votes\">${voteCount}</span>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Popularity</p></td>\r\n      <td><p class=\"modal-table__value\">${popularity}</p></td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Original Title</p></td>\r\n      <td><p class=\"modal-table__value\">${originalTitle}</p></td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Genre</p></td>\r\n      <td><p class=\"modal-table__value\">${genres || ''}</p></td>\r\n    </tr>\r\n  </table>\r\n\r\n  <h3 class=\"film-about\">About</h3>\r\n  <p class=\"film-description\">\r\n    ${overview}\r\n  </p>\r\n  <div class=\"modal-btn-wrap\">\r\n    <button type=\"button\" class=\"modal-btn js-watch\" data-id=\"${id}\">ADD TO WATCHED</button>\r\n    <button type=\"button\" class=\"modal-btn js-queue\" data-id=\"${id}\">ADD TO QUEUE</button>\r\n  </div>\r\n</div>`;\r\n  modalBox.insertAdjacentHTML('beforeend', modalMarkup);\r\n  checkUserLib(movieID);\r\n}\r\n\r\nfunction checkUserLib(movieID) {\r\n  const watchBtn = document.querySelector('.js-watch');\r\n  const queueBtn = document.querySelector('.js-queue');\r\n  watchBtn.addEventListener('click', onClickWatchBtn);\r\n  queueBtn.addEventListener('click', onClickQueueBtn);\r\n\r\n  let isQueued;\r\n  let isWatched;\r\n\r\n  let watchedLib = localStrg.load('watched');\r\n  let queuedLib = localStrg.load('queued');\r\n\r\n  if (watchedLib) {\r\n    isWatched = watchedLib.find(movie => movie.id == movieID) ? true : false;\r\n  }\r\n  if (queuedLib) {\r\n    isQueued = queuedLib.find(movie => movie.id == movieID) ? true : false;\r\n  }\r\n  if (isWatched) {\r\n    watchBtn.classList.add('watched');\r\n    watchBtn.innerText = 'WATCHED';\r\n  }\r\n\r\n  if (isQueued) {\r\n    queueBtn.classList.add('queued');\r\n    queueBtn.innerText = 'QUEUED';\r\n  }\r\n}\r\n\r\n// Modal LibraryButtons functions\r\nfunction onClickWatchBtn(event) {\r\n  const movieID = event.target.dataset.id;\r\n  const watchBtn = document.querySelector('.js-watch');\r\n\r\n  if (!watchBtn.classList.contains('watched')) {\r\n    addMovieToLib(movieID, 'watched');\r\n    watchBtn.classList.add('watched');\r\n    watchBtn.innerText = 'WATCHED';\r\n    updateLibraryPageContent();\r\n    return;\r\n  }\r\n\r\n  watchBtn.classList.remove('watched');\r\n  watchBtn.innerText = 'ADD TO WATCHED';\r\n  removeMovieFromLib(movieID, 'watched');\r\n\r\n  updateLibraryPageContent();\r\n}\r\n\r\nfunction onClickQueueBtn(event) {\r\n  const movieID = event.target.dataset.id;\r\n  const queueBtn = document.querySelector('.js-queue');\r\n\r\n  if (!queueBtn.classList.contains('queued')) {\r\n    addMovieToLib(movieID, 'queued');\r\n    queueBtn.classList.add('queued');\r\n    queueBtn.innerText = 'QUEUED';\r\n    updateLibraryPageContent();\r\n    return;\r\n  }\r\n\r\n  queueBtn.classList.remove('queued');\r\n  queueBtn.innerText = 'ADD TO QUEUE';\r\n  removeMovieFromLib(movieID, 'queued');\r\n\r\n  updateLibraryPageContent();\r\n}\r\n\r\nfunction updateLibraryPageContent() {\r\n  if (window.location.href.indexOf('library') > -1) {\r\n    const queuedBtn = document.querySelector('#btnQueued');\r\n    const isQueuedSelected = queuedBtn.classList.contains('active-btn');\r\n    currentLibPage = isQueuedSelected ? 'queued' : 'watched';\r\n    libraryRender(currentLibPage);\r\n  }\r\n}\r\n\r\n// Modal closing functions\r\nfunction modalClosing() {\r\n  modalBackdrop.classList.add('visually-hidden');\r\n  document.body.style.overflow = '';\r\n  modalBackdrop.removeEventListener('click', modalClosinByBackdrop);\r\n  closeButton.removeEventListener('click', modalClosing);\r\n  window.removeEventListener('keydown', modalClosinByEsc);\r\n  modalBox.innerHTML = '<button type=\"button\" class=\"cross\">+</button>';\r\n}\r\n\r\nfunction modalClosinByEsc(event) {\r\n  if (event.code === 'Escape') {\r\n    modalClosing();\r\n  }\r\n}\r\n\r\nfunction modalClosinByBackdrop(event) {\r\n  if (event.target.classList.contains('backdrop')) {\r\n    modalClosing();\r\n  }\r\n}\r\n","import { openModalFooter } from '../common/modal-footer';\nimport { openModal } from '../common/modal';\nimport { libraryRender } from './libraryRender';\n\nexport const refs = {\n  btnWatched: document.querySelector('#btnWatched'),\n  btnQueued: document.querySelector('#btnQueued'),\n  mainContainer: document.querySelector('.filmoteka__container'),\n  openModalBtn: document.querySelector('.modal-footer-open'),\n  mainContainer: document.querySelector('.filmoteka__container'),\n};\n\n\nlibraryRender(\"watched\");\n\n/* asigning events listiners to buttons: watched and queued */\nrefs.btnQueued.addEventListener('click', clickOnBtnQueuedHandler);\nrefs.btnWatched.addEventListener('click', clickOnBtnWatchedHandler);\nrefs.mainContainer.addEventListener('click', openModal);\nrefs.openModalBtn.addEventListener('click', openModalFooter);\n\n/* defining functions for event listiners*/\n\nfunction clickOnBtnQueuedHandler() {\n  refs.btnWatched.classList.remove('active-btn');\n  refs.btnQueued.classList.add('active-btn');\n  libraryRender(\"queued\");\n}\n\nfunction clickOnBtnWatchedHandler() {\n  refs.btnQueued.classList.remove('active-btn');\n  refs.btnWatched.classList.add('active-btn');\n  libraryRender(\"watched\");\n}\n\n"],"names":["$23bb531707b5ed11$var$refs","overlay","document","querySelector","modalFooter","modalBtnClose","$23bb531707b5ed11$var$closeModalOnEsc","event","code","$23bb531707b5ed11$var$closeModal","classList","remove","body","$599641b11c839d6b$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","log","message","getItem","undefined","parse","removeItem","$8e29cf4802d0d4b8$export$c1f1fc7a5593d7f1","currentPageContent","mainContainer","itemMarkup","map","id","title","year","genres","rating","imgPath","countOfComma","match","length","slice","lastIndexOf","itemString","innerHTML","insertAdjacentHTML","join","$bed364c5f49b67f0$export$af55b9989f8479c","userLibrary","currentLib","load","$025e26c35a91691c$export$a6c9911638b2c14d","movieID","updatedLibraryState","filter","movie","save","$025e26c35a91691c$export$19a6eda62dc56b25","currentLibraryState","movieToAddToLib","find","push","$ad853de26021a040$var$closeButton","$ad853de26021a040$var$modalBackdrop","$ad853de26021a040$var$modalBox","$ad853de26021a040$var$onClickWatchBtn","target","dataset","watchBtn","contains","add","innerText","$ad853de26021a040$var$updateLibraryPageContent","$5b42ae64a43be013$export$21666b427502ea6d","btnWatched","btnQueued","openModalBtn","addEventListener","movieToRender","originalTitle","popularity","overview","voteCount","modalMarkup","queueBtn","isQueued","isWatched","$ad853de26021a040$var$onClickQueueBtn","watchedLib","queuedLib","$ad853de26021a040$var$renderModal","style","overflow","$ad853de26021a040$var$modalClosing","$ad853de26021a040$var$modalClosinByBackdrop","window","$ad853de26021a040$var$modalClosinByEsc"],"version":3,"file":"library.c31e7c43.js.map"}