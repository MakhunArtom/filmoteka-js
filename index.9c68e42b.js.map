{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,8ECAAC,EAAAD,EAAA,S,uCAKA,IAAIE,GAAkB,EAAAD,EAAAE,eAEf,SAASC,IAEhB,MAAMC,EAAgBC,SAASC,cAAc,oBAC7CF,EAAcG,UAAU,GACxB,IAAIC,GAAO,EAAAR,EAAAE,eACPO,EAAW,YAEI,OAAf,EAAAT,EAAAE,iBACAO,EAAW,WACXD,EAAO,MAGX,IACIE,GAAU,IAAIC,MAAOC,cAQzBR,EAAcG,UAPI,MAChB,IAAIM,EAAM,oDAAoDJ,aAC9D,IAAK,IAAIK,EAAIJ,EAASI,GAJR,KAIwBA,GAAK,EACzCD,GAAO,kBAAkBC,MAAMA,aAEjC,OAAOD,CAAG,EAEcE,E,CAGnBC,eAAeC,IAElB,MAAMC,EAAiBb,SAASC,cAAc,qBAC9CY,EAAeX,UAAU,GAEzB,IAAIC,GAAO,EAAAR,EAAAE,eACPiB,EAAY,aACZC,EAAY,GAEG,OAAf,EAAApB,EAAAE,iBACFiB,EAAY,YACZX,EAAO,MAGPP,KAAoB,EAAAD,EAAAE,gBAAgBmB,EAAAC,QAAUC,KAAK,cAIrDH,EAAYC,EAAAC,QAAUC,KAAK,eAH3BH,QAAkB,EAAAI,EAAAC,iBAAgBC,EAAAC,OAAOnB,GACzCP,GAAkB,EAAAD,EAAAE,gBAIlB,IAAIW,EAAM,+DAA+DM,aAEzEN,GAAKO,EAAUQ,KAAIC,GAAc,kBAAkBA,EAAKC,OAAOD,EAAKE,kBAAkBC,KAAK,IAE3Fd,EAAeX,UAAYM,C,sCD9B/B,SAASoB,EAAYzB,IACnB,EAAAR,EAAAkC,cAAa1B,GACbS,IACAd,KACA,EAAAgC,EAAAC,sB,CAdFnB,IACAd,IAGAuB,EAAAW,KAAKC,cAAcC,iBAAiB,QAASC,EAAAC,WAC7Cf,EAAAW,KAAKK,aAAaH,iBAAiB,QAASzC,EAAA6C,iBAC5CjB,EAAAW,KAAKO,KAAKL,iBAAiB,SAAUM,EAAAC,cACrCpB,EAAAW,KAAKU,UAAUR,iBAAiB,SAAS,IAAIN,EAAW,QACxDP,EAAAW,KAAKW,UAAUT,iBAAiB,SAAS,IAAIN,EAAW,QASxD,MAAMgB,GAAc,EAAAjD,EAAAE,gBACpB,EAAAiC,EAAAC,wBACA,EAAApC,EAAAkC,cAAae,IACb,EAAAC,EAAA5B,YACA,EAAA6B,EAAA7B,YACA,EAAA8B,EAAA9B,YACA,EAAA8B,EAAAC","sources":["src/js/index-page/index.js","src/js/index-page/filterRender.js"],"sourcesContent":["import { openModalFooter } from '../common/modal-footer';\nimport { openModal } from '../common/modal';\nimport { searchMovies } from './search';\nimport goTopBtn from '../common/goTopBtn';\nimport { renderPopularMovies } from './renderPopularMovies';\nimport btnWhiteBlack from '../common/btn-white-black';\nimport controlColor,{ controlColorFilter } from '../common/controlColor';\nimport { filterRenderGenre, filterRenderYear } from './filterRender';\nimport { refs } from '../common/varriables';\nimport '../common/headers-fixed';\n\nimport {langCurrent, setIndexLang} from '../lang/changeLang'\nimport { filterRenderGenre, filterRenderYear } from './filterRender';\n\n\nfilterRenderGenre();\nfilterRenderYear();\n\n\nrefs.mainContainer.addEventListener('click', openModal);\nrefs.openModalBtn.addEventListener('click', openModalFooter);\nrefs.form.addEventListener('submit', searchMovies);\nrefs.enLangBTN.addEventListener('click', ()=>changeLang('en'));\nrefs.uaLangBTN.addEventListener('click', ()=>changeLang('ua'));\n\nfunction changeLang (lang){\n  setIndexLang(lang);\n  filterRenderGenre();\n  filterRenderYear();\n  renderPopularMovies();\n}\n\nconst currentLang = langCurrent();\nrenderPopularMovies();\nsetIndexLang(currentLang);\ngoTopBtn();\nbtnWhiteBlack();\ncontrolColor();\ncontrolColorFilter();\n","import { langCurrent } from '../lang/changeLang';\nimport {fetchGenresList} from './themoviedbAPI';\nimport { APIKEY } from '../common/varriables';\nimport localStrg from '../localStorage/localStrg';\n\nlet currentRenderLang=langCurrent();\n\nexport function filterRenderYear() {\n\nconst yearsListElem = document.querySelector('.js-filter-years');\nyearsListElem.innerHTML='';\nlet lang = langCurrent();\nlet allYears = 'All Years';\n\nif (langCurrent()=='ua'){\n    allYears = 'Усі роки';\n    lang = 'uk';\n}\n\nlet startYear = 1907;\nlet endYear = new Date().getFullYear();\nconst yearsList = () => {\n  let str = `<option class=\"js-filter-year\" value=\"\" selected>${allYears}</option>`;\n  for (let i = endYear; i >= startYear; i -= 1) {\n    str += `<option value=\"${i}\">${i}</option>`;\n  }\n  return str;\n};\nyearsListElem.innerHTML = yearsList();\n}\n\nexport async function filterRenderGenre() {\n\n    const genresListElem = document.querySelector('.js-filter-genres');\n    genresListElem.innerHTML='';\n\n    let lang = langCurrent();\n    let allGenres = 'All Genres';\n    let genreList = [];\n    \n    if (langCurrent()=='ua'){\n      allGenres = 'Усі жанри';\n      lang = 'uk';\n  } \n    \n  if (currentRenderLang!==langCurrent()||!localStrg.load('genresList'))  {\n    genreList = await fetchGenresList(APIKEY,lang); \n    currentRenderLang=langCurrent();\n    } else { \n    genreList = localStrg.load('genresList');\n  } \n    let str = `<option class=\"js-filter-genres--default\" value=\"\" selected>${allGenres}</option>`;\n\n    str+=genreList.map(elem=>{return `<option value=\"${elem.id}\">${elem.name}</option>`}).join('');\n\n    genresListElem.innerHTML = str;\n}\n"],"names":["$34clH","parcelRequire","$2l4hZ","$3f144c1fd23e31fc$var$currentRenderLang","langCurrent","$3f144c1fd23e31fc$export$29c339e61de99b2f","yearsListElem","document","querySelector","innerHTML","lang","allYears","endYear","Date","getFullYear","str","i","yearsList","async","$3f144c1fd23e31fc$export$aa1de0e6de1fcbda","genresListElem","allGenres","genreList","$7GRT7","default","load","$gTRxP","fetchGenresList","$bLUh7","APIKEY","map","elem","id","name","join","$c1872c521253a89f$var$changeLang","setIndexLang","$1coQq","renderPopularMovies","refs","mainContainer","addEventListener","$eTE0Z","openModal","openModalBtn","openModalFooter","form","$6j6JN","searchMovies","enLangBTN","uaLangBTN","$c1872c521253a89f$var$currentLang","$jWOqs","$z2zGY","$6WRUV","controlColorFilter"],"version":3,"file":"index.9c68e42b.js.map"}