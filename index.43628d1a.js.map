{"mappings":"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","sources":["src/js/localStrg.js","src/js/API.js","src/js/decodeGenres.js","src/js/getPopularMovies.js","src/js/modal.js","src/js/index.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(`Error during saving ${key} to local strage; `, error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(`Error during getting ${key} from localStorage: `, error.message);\n  }\n};\n\nconst del = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(`Error during deleting ${key}! from localStorage: `, error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  del,\n};\n","import { APIURL } from \"./index\";\nimport localStrg from \"./localStrg\";\n\nexport async function fetchPopular(token){\n    return await (await fetch(APIURL+`3/trending/movie/day?api_key=${token}`)).json();\n}\n\nexport async function fetchGenresList(token){\n    const response = await (await fetch(APIURL+`3/genre/movie/list?api_key=${token}&language=en-US`)).json();\n    localStrg.save(\"genresList\",response.genres);\n    console.log(\"Genres were updated, and saved to localStorage for future\");\n    return response.genres;\n}","import { fetchGenresList } from \"./API\";\nimport localStrg, { save, load, del } from \"./localStrg\";\nimport { APIKEY } from \"./index\";\n\nexport async function decodeGenres(genres){\n    if (!localStrg.load (\"genresList\")){\n        await fetchGenresList(APIKEY)\n    }\n    const genresList = localStrg.load (\"genresList\");\n    let genresNames = new Array;\n    \n    genres.forEach(genre => {\n    // try to find genre in localStorage\n    try{\n        genresNames.push((genresList.find(genreListItem => genreListItem.id === genre)).name)\n    }// update localStorage ganres data and try to find one more time\n    catch(error){\n        console.log(`${genre} wasn't found in Local Storage, updating ganresList`)\n        genresList = await fetchGenresList(APIKEY);\n        genresNames.push((genresList.find(genreListItem => genreListItem.id === genre)).name)\n    }});\n\n    return(genresNames.join())\n}","import { fetchPopular } from './API';\nimport { decodeGenres } from './decodeGenres';\n\nimport { APIKEY } from './index';\nimport { APIURL } from './index';\n\nexport async function getPopularMovies(APIKEY) {\n  const popularMovies = await fetchPopular(APIKEY);\n  const pageCount = popularMovies.total_pages;\n  const result = popularMovies.results;\n\n  const currentPage = await Promise.all(\n    result.map(\n      async ({\n        id,\n        title,\n        original_title,\n        name,\n        original_name,\n        overview,\n        poster_path,\n        genre_ids,\n        popularity,\n        release_date,\n        first_air_date,\n        vote_average,\n        vote_count,\n      }) => {\n        const movieTitle = title ? title : name;\n        const movieOriginalTitle = original_title\n          ? original_title\n          : original_name;\n        const movieDate = release_date ? release_date : first_air_date;\n        const imgPath = poster_path\n          ? `https://image.tmdb.org/t/p/w300` + poster_path\n          : '';\n        const genres = genre_ids ? await decodeGenres(genre_ids) : null;\n        const raitng = vote_average ? vote_average : null;\n\n        return await {\n          id: id,\n          title: movieTitle,\n          originalTitle: movieOriginalTitle,\n          year: movieDate.slice(0, 4),\n          genres: genres,\n          popularity: popularity,\n          overview: overview,\n          rating: raitng,\n          voteCount: vote_count,\n          imgPath: imgPath,\n        };\n      }\n    )\n  );\nconsole.log(currentPage);\n  return currentPage;\n}\n","import localStrg from './localStrg';\r\n\r\nconst closeButton = document.querySelector('.cross');\r\nconst modalBackdrop = document.querySelector('.backdrop');\r\nconst modalBox = document.querySelector('.modal-container');\r\n\r\n\r\nexport function openModal(event) {\r\n  if (!event.target.classList.contains('filmoteka__item')) {\r\n    return;\r\n  }\r\n  const movieId = +event.target.dataset.id;\r\n  renderModal(movieId);\r\n\r\n\r\n  modalBackdrop.classList.remove('visually-hidden');\r\n  document.body.style.overflow = 'hidden';\r\n\r\n  closeButton.addEventListener('click', modalClosing);\r\n  modalBackdrop.addEventListener('click', modalClosinByBackdrop);\r\n  window.addEventListener('keydown', modalClosinByEsc);\r\n}\r\n\r\n\r\nfunction renderModal(movieID) {\r\n  const currentPageContent = localStrg.load('currentPage');\r\n  const movieToRender = currentPageContent.find(movie => (movie.id === movieID));\r\n\r\n  const {id,\r\n    title,\r\n    originalTitle,\r\n    year,\r\n    genres,\r\n    popularity,\r\n    overview,\r\n    rating,\r\n    voteCount,\r\n    imgPath}=movieToRender;\r\n\r\n  const modalMarkup = `<div class=\"modal-img\">\r\n  <img\r\n    class=\"modal-img\"\r\n    src=\"${imgPath}\"\r\n    alt=\"${title}\"\r\n    width=\"370\"\r\n    height=\"470\"\r\n  />\r\n</div>\r\n<div class=\"film-info\">\r\n  <h2 class=\"film-name\">${title}</h2>\r\n  <table class=\"modal-table\">\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Vote / Votes</p></td>\r\n      <td>\r\n        <p class=\"modal-table__value\">\r\n          <span class=\"modal-table__vote\">${rating}</span> /\r\n          <span class=\"modal-table__votes\">${voteCount}</span>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Popularity</p></td>\r\n      <td><p class=\"modal-table__value\">${popularity}</p></td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Original Title</p></td>\r\n      <td><p class=\"modal-table__value\">${originalTitle}</p></td>\r\n    </tr>\r\n    <tr class=\"modal-table__row\">\r\n      <td><p class=\"modal-table__attribute\">Genre</p></td>\r\n      <td><p class=\"modal-table__value\">${genres}</p></td>\r\n    </tr>\r\n  </table>\r\n\r\n  <h3 class=\"film-about\">About</h3>\r\n  <p class=\"film-description\">\r\n    ${overview}\r\n  </p>\r\n  <div class=\"modal-btn-wrap\">\r\n    <button type=\"button\" class=\"modal-btn\">ADD TO WATCHED</button>\r\n    <button type=\"button\" class=\"modal-btn\">ADD TO QUEUE</button>\r\n  </div>\r\n</div>`\r\n  modalBox.insertAdjacentHTML(\"beforeend\",modalMarkup)\r\n}\r\n\r\nfunction modalClosing() {\r\n  modalBackdrop.classList.add('visually-hidden');\r\n  document.body.style.overflow = '';\r\n  modalBackdrop.removeEventListener('click', modalClosinByBackdrop);\r\n  closeButton.removeEventListener('click', modalClosing);\r\n  window.removeEventListener('keydown', modalClosinByEsc);\r\n  modalBox.innerHTML='';\r\n}\r\n\r\nfunction modalClosinByEsc(event) {\r\n  if (event.code === 'Escape') {\r\n    modalClosing();\r\n  }\r\n}\r\n\r\nfunction modalClosinByBackdrop(event) {\r\n  if (event.target.classList.contains('backdrop')) {\r\n    modalClosing();\r\n  }\r\n}\r\n","import { getPopularMovies } from './getPopularMovies';\nimport { openModal } from './modal';\n\nimport localStrg from './localStrg';\nexport const APIKEY = '565e4989d784811de7dff7d665000157';\nexport const APIURL = 'https://api.themoviedb.org/';\nconst refs = {\n  mainContainer: document.querySelector('.filmoteka__container'),\n};\n\nrenderPopularMovies();\nasync function renderPopularMovies() {\n  const currentPageContent = await getPopularMovies(APIKEY);\n  localStrg.save('currentPage', currentPageContent);\n  console.log(currentPageContent);\n\n  const markup = currentPageContent.map(\n    ({ id, title, year, genres, rating, imgPath }) => {\n      return `<div class=\"filmoteka__item\" data-id=\"${id}\">\n            <div class=\"filmoteka__item-wrapper\">\n                <img class=\"filmoteka-img\" src=\"${imgPath}\" alt=\"\">\n                <div class=\"overlay-text\">\n                    <h2 class=\"subtitle\">${title}</h2>\n                    <p class=\"discription\">${genres}<span class=\"filmoteka__year\"> ${year}</span> </p>\n                    <div class=\"filmoteka__rating\">${rating}</div>\n                </div>\n            </div>\n    </div>`;\n    }\n  );\n  refs.mainContainer.insertAdjacentHTML('beforeend', markup.join(''));\n  refs.mainContainer.addEventListener('click', openModal);\n}\n"],"names":["$584a2aa5c4bbe395$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","async","$9641fdd394b90517$export$16bf2264c00353d2","token","fetch","$85a5f86b715fe7db$export$39576a9723c055a0","json","$9641fdd394b90517$export$d60bdeaf43923027","response","save","genres","log","$eebbf543936947dc$export$10c61d4a9a9ff219","load","$85a5f86b715fe7db$export$8aa241ee05ce92b7","genresList","genresNames","Array","forEach","genre","push","find","genreListItem","id","name","await","join","$811a776170644594$export$76bd8a7b840a3729","APIKEY1","popularMovies","result","total_pages","results","currentPage","Promise","all","map","title","original_title","original_name","overview","poster_path","genre_ids","popularity","release_date","first_air_date","vote_average","vote_count","movieTitle","movieOriginalTitle","movieDate","imgPath","raitng","originalTitle","year","slice","rating","voteCount","$8a7e756c566dd1ea$var$closeButton","document","querySelector","$8a7e756c566dd1ea$var$modalBackdrop","$8a7e756c566dd1ea$var$modalBox","$8a7e756c566dd1ea$export$a7f6cffb6b8ba11c","event","target","classList","contains","movieID","movieToRender","movie","modalMarkup","$8a7e756c566dd1ea$var$renderModal","dataset","remove","body","style","overflow","addEventListener","$8a7e756c566dd1ea$var$modalClosing","$8a7e756c566dd1ea$var$modalClosinByBackdrop","window","$8a7e756c566dd1ea$var$modalClosinByEsc","$85a5f86b715fe7db$var$refs","mainContainer","currentPageContent","markup","insertAdjacentHTML","$85a5f86b715fe7db$var$renderPopularMovies"],"version":3,"file":"index.43628d1a.js.map"}